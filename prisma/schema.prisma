// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(CLIENT)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt

  transactions Transaction[]
  categories Category[]

  @@map("user")
}

enum Role {
  CLIENT
  ADMIN
  ROOT
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  userId    Int
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("category")
}

model Transaction {
  id        Int        @id @default(autoincrement())
  userId    Int
  categoryId Int
  resume    String
  amount    Float
  type      TransactionMode 
  status    TransactionStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  category  Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("transaction")
}

enum TransactionMode  {
  DEPOSIT
  WITHDRAWAL
}

enum TransactionStatus {
  PENDING   
  PAID      
  RECEIVED  
  CANCELED  
}